# -*- mode: yaml-*-
# vi: set ft=yaml sw=2 ts=2 :

- name: Work machine
  hosts: all
  sudo: True
  tasks:
    - name: set locale
      lineinfile: dest=/etc/default/locale line="LC_ALL=C"

    - name: install packages
      apt: name={{ item }} update_cache=yes
      with_items:
        - git
        - curl
        - nginx

    - name: add ppa with node
      shell: curl -sL https://deb.nodesource.com/setup | bash -

    - name: install node and npm
      apt: name=nodejs update_cache=yes

    - name: create /var/www/yourdomain/ directory
      file: dest=/var/www/yourdomain state=directory

    - name: copy app.js
      copy: src=app.js dest=/var/www/yourdomain/

    - name: copy yourdomain
      copy: src=yourdomain dest=/etc/nginx/sites-available/


    #---

    #- name: Install Nginx
    #  apt: name=nginx update_cache={{ update_apt_cache }} state=installed
    #  tags: packages

    ##- name: Copy the SSL certificate to the remote server
    ##  copy: content="{{ ssl_crt }}" dest={{ ssl_dest_dir }}/{{ application_name }}.crt
    ##  notify: restart nginx

    ##- name: Copy the SSL private key to the remote server
    ##  copy: content="{{ ssl_key }}" dest={{ ssl_dest_dir }}/{{ application_name }}.key
    ##  notify: restart nginx

    #- name: Create the Nginx configuration file
    #  template: src=nginx_site_config.j2
    #            dest=/etc/nginx/sites-available/{{ project_name }}
    #            backup=yes
    #  notify: reload nginx

    #- name: Ensure that the default site is disabled
    #  command: rm /etc/nginx/sites-enabled/default
    #           removes=/etc/nginx/sites-enabled/default
    #  notify: reload nginx

    #- name: Ensure that the application site is enabled
    #  command: ln -s /etc/nginx/sites-available/{{ project_name }}
    #           /etc/nginx/sites-enabled/{{ project_name }}
    #           creates=/etc/nginx/sites-enabled/{{ project_name }}
    #  notify: reload nginx

    #- name: Ensure Nginx service is started
    #  service: name=nginx state=started enabled=yes


    #- name: "Install forever (to run Node.js app)."
    #  npm: name=forever global=yes state=latest

    #- name: "Check list of Node.js apps running."
    #  command: forever list
    #  register: forever_list
    #  changed_when: false

    #- name: "Start example Node.js app."
    #  command: forever start /path/to/app.js
    #  when: "forever_list.stdout.find('/path/to/app.js') == -1"
